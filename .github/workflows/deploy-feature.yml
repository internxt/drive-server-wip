name: Deploy PR Preview
on:
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
        with:
          registry-url: 'https://npm.pkg.github.com'
      - run: echo "registry=https://registry.yarnpkg.com/" > .npmrc
      - run: echo "@internxt:registry=https://npm.pkg.github.com" >> .npmrc
      # You cannot read packages from other private repos with GITHUB_TOKEN
      # You have to use a PAT instead https://github.com/actions/setup-node/issues/49
      - run: echo //npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .npmrc
      - run: echo "always-auth=true" >> .npmrc
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push to drive-server-wip
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./development.Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/drive-server-wip-dev:preview-${{ github.event.number }}-${{ github.sha }}
  add_preview_label:
    runs-on: ubuntu-latest
    needs: build_and_push_image
    steps:
    - uses: actions/checkout@v2
    - uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: |
          preview
  check_deployment:
    needs: add_preview_label
    runs-on: ubuntu-latest
    environment:
      name: develop
    steps:
      - name: Verify PR deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PREVIEW }}
          version: v1.22.2 # specify kubectl binary version explicitly
          command: get apps ${{ github.event.repository.name }}-preview-${{ github.event.number }} -n argocd -o jsonpath='{.status.health.status}' 2>&1 > deploy.status; status=$(cat deploy.status); echo "Received status $status"; if [[ $status = 'Healthy' ]]; then exit 0; fi; echo "Non Healthy status recieved. Waiting 30s to retry..."; for i in {1..10}; do sleep 30; status=$(kubectl get apps ${{ github.event.repository.name }}-preview-${{ github.event.number }} -n argocd -o jsonpath='{.status.health.status}'); if [[ $status = 'Healthy' ]]; then echo "Healthy status received"; exit 0; else echo "Last status $status. Waiting 30s after attempt $i" ;fi; done; echo Failed to get Healthy status after 10 retries; echo $status > deploy.status; exit 1;
      - name: Get Ingress Info
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PREVIEW }}
          version: v1.22.2 # specify kubectl binary version explicitly
          command: get ingress ${{ github.event.repository.name }}-svc-ingress-${{ github.event.number }} -n preview-${{ github.event.repository.name }} -o jsonpath='http://{.status.loadBalancer.ingress[0].ip}{.spec.rules[0].http.paths[0].path}' > deploy.info
      - name: Get web url
        id: info
        run: |
          webapp_url=$(cat deploy.info)
          echo $webapp_url
          echo "webapp_url=$webapp_url" >> $GITHUB_OUTPUT
      - name: Get last status
        if: failure()
        id: deploy_error
        run: |
          status=$(cat deploy.status)
          echo $status
          echo "status=$status" >> $GITHUB_OUTPUT
      - name: Comment error message
        if: failure()
        uses: peter-evans/create-or-update-comment@v4
        id: comment_error
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ github.event.repository.full_name }}
          issue-number: ${{ github.event.number }}
          comment-id: preview-deployment-status
          body: |
            > [!CAUTION]
            > Preview failed: Not deployed after 5 min check ðŸ’¥
            > **Last status received: ${{ steps.deploy_error.outputs.status || 'Unknown error. Check action logs for more details' }}**
          reactions: "-1"
      - name: Comment success message
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ github.event.repository.full_name }}
          issue-number: ${{ github.event.number }}
          comment-id: preview-deployment-status
          edit-mode: replace
          body: |
            > [!TIP]
            > Preview successfully deployed ðŸš€
            > **You can access the preview here:** [${{ steps.info.outputs.webapp_url }}](${{ steps.info.outputs.webapp_url }})
          reactions: rocket
      - uses: actions/checkout@v2
      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: |
            deployed